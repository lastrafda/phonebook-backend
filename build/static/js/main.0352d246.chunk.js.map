{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Filter","filter","onChange","value","PersonForm","addPerson","newName","newNumber","handleNumberChange","handleNameChange","onSubmit","type","Persons","personFilter","onDelete","liStyle","listSyle","map","x","key","shortid","generate","style","name","number","onClick","all","axios","get","then","response","data","create","newObject","post","destroy","id","delete","Notification","message","baseStyle","backgroundColor","padding","color","border","fontStyle","fontSize","borderRadius","console","log","styleFactory","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","personService","returnedPersons","notify","duration","setTimeout","e","target","preventDefault","personObject","returnedPerson","concat","catch","error","p","toUpperCase","includes","person","window","confirm","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0352d246.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({filter, onChange}) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter shown with <input value={ filter } onChange={ onChange }/>\n\t\t</div>\n\t)\n}\n\n\nexport default Filter","import React from 'react'\n\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNumberChange, handleNameChange}) => {\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={ addPerson }>\n        <div>\n          Name: <input value={ newName } onChange={ handleNameChange }/>\n        </div>\n        <div>\n          Number: <input value={ newNumber } onChange={ handleNumberChange }/>\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n\t\t</div>\n\t)\n}\n\n\nexport default PersonForm","import React from 'react'\nimport shortid from 'shortid'\n\n\nconst Persons = ({personFilter, onDelete}) => {\n\tconst liStyle = {\n\t\tlistSyle: 'none'\n\t}\n\treturn (\n\t\t\t<ul>\n        {personFilter().map((x) => <li key={shortid.generate()} style={liStyle}>{`${x.name} ${x.number}`} <button onClick={() => onDelete(x)}>Delete</button></li>)}\n      </ul>\n\t)\n}\n\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst all = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject)\n\treturn request.then(response => response.data)\n}\n\nconst destroy = id => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => response.data)\n}\n\n// I've made the decision to allow users to create all phonebook entries, so this \n// constant is no longer necesary\n// const update = (id, newObject) => {\n// \tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n// \treturn request.then(response => response.data)\n// } \n\nexport default { all, create, destroy }","import React from 'react'\n\n\nconst Notification = ({ message, type }) => {\n\tif (message === null || type === null) {\n\t\treturn null\n\t}\n\tconst styleFactory = (type) => {\n\t\tlet baseStyle = {\n\t\t\tbackgroundColor: '#FFF',\n\t\t\tpadding: '5px 10px',\n\t\t\tcolor: 'black',\n\t\t\tborder: 'solid 1px black',\n\t\t\tfontStyle: 'italic',\n\t\t\tfontSize: '16px',\n\t\t\tborderRadius: '15px'\n\t\t}\n\t\tconsole.log(type, 'type')\n\t\tif (type === 'success') {\n\t\t\treturn {...baseStyle, color: 'green', border: 'solid 1px green'}\n\t\t}\n\t\treturn {...baseStyle, color: 'red', border: 'solid 1px red'}\n\t}\n\treturn (\n\t\t<div style={ styleFactory(type) }>\n\t\t\t<p>{ message }</p>\n\t\t</div>\n\t)\n}\n\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ notification, setNotification] = useState({message: null, type: null})\n\n  useEffect(() => {\n    personService.all()\n      .then(returnedPersons => setPersons(returnedPersons))\n  },[])\n\n  const clearForm = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (e) => setNewName(e.target.value)\n  const handleNumberChange = (e) => setNewNumber(e.target.value)\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value)\n  }\n  const addPerson = (e) => {\n    e.preventDefault()\n    if (newName === '' || newNumber === '') return\n    let personObject = { \n      name: newName,\n      number: newNumber\n    }\n    personService.create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        clearForm()\n        notify(`Added ${personObject.name}`, 'success', 3000)\n      })\n      .catch(error => {\n        notify(`The person ${personObject.name} was already deleted from server`, 'error', 3000 )\n        setPersons(persons.filter(p => p.id !== personObject.id))\n      })\n  }\n\n  const handleDelete = person => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.destroy(person.id)\n      .then(response => {\n        notify(`Deleted ${person.name}`, 'error', 3000)\n        setPersons(persons.filter(p => p.id !== person.id))\n        return setPersons(persons.filter((p) => p.id !== person.id));\n      })\n      .catch(error => {\n        notify(`The person ${person.name} was already deleted from server`, 'error', 3000 )\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n    }\n  }\n\n  const changeNumber = id =>  {\n    const person = persons.find(p => p.id === id)\n    const changedPerson = {...person, number: newNumber}\n    personService.update(id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(p => p.id !== id ? p : changedPerson))\n        notify(`Updated ${changedPerson.name}`, 'success', 3000)\n      })\n      .catch(error => {\n        notify(`The person ${changedPerson.name} was already deleted from server`, 'error', 3000 )\n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n\n  const notify = (message, type, duration) => {\n    setNotification({...notification, message: message, type: type})\n    setTimeout(() => {\n      setNotification({...notification, message: null, type: null})\n    }, duration)\n  }\n\n  const personFilter = () => persons.filter((x) => x.name.toUpperCase().includes(filter.toUpperCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={ notification.message } type={ notification.type }/>\n      <Filter filter={ filter}  onChange={ handleFilterChange } />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons personFilter={personFilter} onDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}